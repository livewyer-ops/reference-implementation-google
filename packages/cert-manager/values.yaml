installCRDs: true
global:
  leaderElection:
    namespace: cert-manager
webhook:
  validatingWebhookConfiguration:
    namespaceSelector:
      matchExpressions:
        - key: cert-manager.io/disable-validation
          operator: NotIn
          values:
            - "true"
        - key: kubernetes.azure.com/managedby
          operator: NotIn
          values:
            - aks
        - key: control-plane
          operator: NotIn
          values:
            - "true"
extraObjects:
  - |
    apiVersion: cert-manager.io/v1
    kind: ClusterIssuer
    metadata:
      name: letsencrypt-prod
    spec:
      acme:
        server: https://acme-v02.api.letsencrypt.org/directory
        privateKeySecretRef:
          name: letsencrypt-prod
        solvers:
          - http01:
              ingress:
                ingressClassName: nginx
  - |
    apiVersion: cert-manager.io/v1
    kind: ClusterIssuer
    metadata:
      name: letsencrypt-staging
    spec:
      acme:
        server: https://acme-staging-v02.api.letsencrypt.org/directory
        privateKeySecretRef:
          name: letsencrypt-staging
        solvers:
          - http01:
              ingress:
                ingressClassName: nginx
  - |
    {{ if eq .Values.global.pathRouting "true"}}
    # This resource is to create default certificate of the base domain
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      name: default-cert
      namespace: cert-manager
    spec:
      secretName: default-tls-prod
      issuerRef:
        name: letsencrypt-prod
        kind: ClusterIssuer
      dnsNames:
      - {{ .Values.global.domainName }}
    {{ end }}
