---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: backstage-env-vars
  namespace: backstage
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
spec:
  refreshInterval: "0"
  secretStoreRef:
    name: keycloak
    kind: ClusterSecretStore
  target:
    name: backstage-env-vars
    # creationPolicy: "Owner"
    template:
      data:
        ARGOCD_ADMIN_PASSWORD: "{{ .ARGOCD_ADMIN_PASSWORD }}"
        ARGOCD_AUTH_TOKEN: "argocd.token={{.ARGOCD_SESSION_TOKEN}}"
        POSTGRES_PASSWORD: "{{ .password }}"
        BACKSTAGE_CLIENT_SECRET: "{{ .BACKSTAGE_CLIENT_SECRET }}"
  dataFrom:
    - sourceRef:
        generatorRef:
          apiVersion: generators.external-secrets.io/v1alpha1
          kind: Password
          name: "postgres-password"
  data:
    - secretKey: ARGOCD_SESSION_TOKEN
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        key: keycloak-clients
        property: ARGOCD_SESSION_TOKEN # Note: Read-Only non-expiring token
    - secretKey: BACKSTAGE_CLIENT_SECRET
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        key: keycloak-clients
        property: BACKSTAGE_CLIENT_SECRET
    - secretKey: ARGOCD_ADMIN_PASSWORD
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        key: keycloak-clients
        property: ARGOCD_ADMIN_PASSWORD
---
apiVersion: generators.external-secrets.io/v1alpha1
kind: Password
metadata:
  name: postgres-password
  namespace: backstage
  annotations:
    argocd.argoproj.io/sync-wave: "-20"
spec:
  length: 48
  digits: 5
  symbols: 5
  symbolCharacters: "/-+"
  noUpper: false
  allowRepeat: true
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: integrations
  namespace: backstage
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
spec:
  refreshInterval: "0"
  secretStoreRef:
    name: azure-keyvault
    kind: ClusterSecretStore
  target:
    name: integrations
    template:
      data:
        github-integration.yaml: |
          appId: {{ .appId }}
          clientId: {{ .clientId }}
          clientSecret: {{ .clientSecret }}
          webhookUrl: {{ .webhookUrl }}
          webhookSecret: {{ .webhookSecret }}
          privateKey: | {{ .privateKey | nindent 2}}
  data:
    - secretKey: "appId"
      remoteRef:
        key: config
        property: github.appId
    - secretKey: "clientId"
      remoteRef:
        key: config
        property: github.clientId
    - secretKey: "clientSecret"
      remoteRef:
        key: config
        property: github.clientSecret
    - secretKey: "webhookSecret"
      remoteRef:
        key: config
        property: github.webhookSecret
    - secretKey: "privateKey"
      remoteRef:
        key: config
        property: github.privateKey
    - secretKey: "webhookUrl"
      remoteRef:
        key: config
        property: github.webhookUrl
